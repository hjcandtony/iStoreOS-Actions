name: 📦 1132iStoreOS集成OAF（无编译版）
on:
  workflow_dispatch:
    inputs:
      network_mode:
        description: "网络模式"
        required: true
        default: "dhcp"
        type: choice
        options:
          - dhcp
          - static
      static_ip:
        description: "静态IP（仅静态模式）"
        default: "192.168.5.88"
      static_gateway:
        description: "网关（仅静态模式）"
        default: "192.168.5.1"

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 准备工作目录
        run: |
          mkdir -p firmware oaf_files working_dir

      - name: 下载iStoreOS官方固件
        run: |
          # 下载适合arm64的官方固件（避免编译）
          FIRMWARE_URL="https://github.com/istoreos/istoreos/releases/download/v21.02.3/istoreos-armsr-armv8-generic-rootfs.tar.gz"
          curl -L -o firmware/base_firmware.tar.gz "$FIRMWARE_URL"
          
          # 验证固件
          if [ ! -s "firmware/base_firmware.tar.gz" ]; then
            echo "错误：官方固件下载失败"
            exit 1
          fi

      - name: 获取OAF预编译包
        run: |
          OAF_VERSION="1.0.2"
          ARCH="aarch64_cortex-a53"
          
          # 下载所有必要的OAF组件
          wget "https://github.com/destan19/OpenAppFilter/releases/download/v${OAF_VERSION}/oaf_${OAF_VERSION}_${ARCH}.ipk" -P oaf_files/
          wget "https://github.com/destan19/OpenAppFilter/releases/download/v${OAF_VERSION}/open-app-filter_${OAF_VERSION}_${ARCH}.ipk" -P oaf_files/
          wget "https://github.com/destan19/OpenAppFilter/releases/download/v${OAF_VERSION}/luci-app-oaf_${OAF_VERSION}_all.ipk" -P oaf_files/
          wget "https://github.com/destan19/OpenAppFilter/releases/download/v${OAF_VERSION}/luci-i18n-oaf-zh-cn_${OAF_VERSION}_all.ipk" -P oaf_files/
          
          # 验证下载
          if [ $(ls oaf_files/*.ipk | wc -l) -ne 4 ]; then
            echo "错误：OAF组件下载不完整"
            exit 1
          fi

      - name: 解压官方固件并修改
        run: |
          # 解压固件到工作目录
          tar -zxf firmware/base_firmware.tar.gz -C working_dir/
          
          # 创建必要目录
          mkdir -p working_dir/etc/uci-defaults/
          mkdir -p working_dir/var/opkg/archives/
          
          # 复制OAF包到固件中
          cp oaf_files/*.ipk working_dir/var/opkg/archives/

      - name: 配置网络（静态/DHCP）
        run: |
          # 创建网络配置脚本
          cat > working_dir/etc/uci-defaults/90-network-config << EOF
          #!/bin/sh
          # 网络配置
          uci set network.lan.proto=${{ inputs.network_mode }}
          EOF
          
          # 如果是静态IP，添加IP和网关配置
          if [ "${{ inputs.network_mode }}" = "static" ]; then
            cat >> working_dir/etc/uci-defaults/90-network-config << EOF
            uci set network.lan.ipaddr=${{ inputs.static_ip }}
            uci set network.lan.gateway=${{ inputs.static_gateway }}
            EOF
          fi
          
          # 完成网络配置
          cat >> working_dir/etc/uci-defaults/90-network-config << EOF
          uci commit network
          /etc/init.d/network restart
          EOF
          
          chmod +x working_dir/etc/uci-defaults/90-network-config

      - name: 添加OAF自动安装脚本
        run: |
          # 创建OAF自动安装脚本
          cat > working_dir/etc/uci-defaults/95-install-oaf << 'EOF'
          #!/bin/sh
          # 等待网络就绪
          sleep 10
          
          # 更新包列表并安装OAF
          opkg update
          opkg install /var/opkg/archives/oaf_*.ipk
          opkg install /var/opkg/archives/open-app-filter_*.ipk
          opkg install /var/opkg/archives/luci-app-oaf_*.ipk
          opkg install /var/opkg/archives/luci-i18n-oaf-zh-cn_*.ipk
          
          # 启动并设置开机自启
          /etc/init.d/oaf enable
          /etc/init.d/oaf start
          /etc/init.d/uhttpd restart
          EOF
          
          chmod +x working_dir/etc/uci-defaults/95-install-oaf

      - name: 重新打包固件
        run: |
          # 打包修改后的固件
          tar -zcf final_firmware.tar.gz -C working_dir .
          
          # 验证最终固件
          if [ ! -s "final_firmware.tar.gz" ]; then
            echo "错误：固件打包失败"
            exit 1
          fi

      - name: 上传最终固件
        uses: softprops/action-gh-release@v2
        with:
          tag_name: istoreos-oaf-${{ github.run_id }}
          name: iStoreOS with OAF
          body: |
            ## iStoreOS 已集成OAF防沉迷插件
            - 网络模式: ${{ inputs.network_mode }}
            - IP地址: ${{ inputs.network_mode == 'static' && inputs.static_ip || 'DHCP自动获取' }}
            - OAF版本: 1.0.2
          files: |
            final_firmware.tar.gz
            oaf_files/*.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
