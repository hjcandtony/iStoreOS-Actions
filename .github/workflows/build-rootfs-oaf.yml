name: 💿 202509131052St1_Build-Rootfs-release-oaf
on:
  workflow_dispatch:
    inputs:
      network_settings:
        description: "请选择初始网络配置"
        required: true
        default: 'dhcp'
        type: choice
        options:
          - 'static'
          - 'dhcp'
      ipaddr:
        description: '请输入管理IP（静态地址时必填）'
        required: true
        default: '192.168.5.88'
      gateway:
        description: '请输入默认网关（静态地址时必填）'
        required: true
        default: '192.168.5.1'
      include_docker:
        description: "是否集成Docker插件"
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: ⚙️ 设置可执行权限
      run: | 
        chmod +x arm64/build24.sh
        chmod +x shell/*.sh

    - name: ⚙️ 设置IP和网关
      run: |
        echo "当前网络配置路径"
        CONFIG_PATH="./files/etc/uci-defaults/99-custom.sh"
        echo $CONFIG_PATH
        if [ "${{ inputs.network_settings }}" = "static" ]; then
           echo "删除网络设置-dhcp"
           sed -i '44,105d' "$CONFIG_PATH"
           echo "替换默认配置"
           sed -i "/ipaddr/s/192.168.5.88/${{ inputs.ipaddr }}/g" "$CONFIG_PATH"
           sed -i "/gateway/s/192.168.5.1/${{ inputs.gateway }}/g" "$CONFIG_PATH"
        else
           echo "删除网络设置-static"
           sed -i '36,42d' "$CONFIG_PATH"
        fi
        echo "输出配置"
        cat $CONFIG_PATH

    - name: ⏬ 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev zstd curl unzip tree git

    - name: ⏬ 下载 ImageBuilder
      run: |
        curl -L -o imagebuilder.tar.zst https://github.com/Kwonelee/iStoreOS-Actions/releases/download/iStoreOS-ImageBuilder-20250905/istoreos-imagebuilder-armsr-armv8.Linux-x86_64.tar.zst
        tar --use-compress-program=unzstd -xvf imagebuilder.tar.zst
        mv istoreos-imagebuilder-* imagebuilder

    - name: ⏬ 克隆OpenAppFilter源码
      run: |
        # 按照官方推荐路径放置源码
        git clone https://github.com/destan19/OpenAppFilter.git imagebuilder/package/OpenAppFilter

    - name: ⏬ 复制并设置必备文件
      run: |
        cp arm64/{build24.sh,Makefile} imagebuilder/
        cp shell/{prepare-packages.sh,custom-packages.sh} imagebuilder/
        find files/packages/ -name "*.ipk" -exec cp {} imagebuilder/packages/ \;
        
        mkdir -p imagebuilder/files/etc/{uci-defaults,opkg,banner1,openclash/core}
        #添加开机启动脚本
        cp files/etc/uci-defaults/99-custom.sh imagebuilder/files/etc/uci-defaults/
        #替换软件源
        cp files/etc/opkg/distfeeds.conf imagebuilder/files/etc/opkg/
        #替换O大打包脚本的默认banner
        cp files/etc/banner imagebuilder/files/etc/banner1/
        cp files/etc/openclash/core/clash_meta imagebuilder/files/etc/openclash/core/
        #临时解决通过晶晨宝盒写入emmc后根分区变为只读状态问题
        cp files/etc/rc.local imagebuilder/files/etc/
        
        cd imagebuilder
        echo "启用rootfs.tar.gz配置并停用非必要配置"
        sed -i 's/# CONFIG_TARGET_ROOTFS_TARGZ is not set/CONFIG_TARGET_ROOTFS_TARGZ=y/' .config
        sed -i "s|CONFIG_TARGET_ROOTFS_SQUASHFS=.*|# CONFIG_TARGET_ROOTFS_SQUASHFS is not set|g" .config
        sed -i "s|CONFIG_TARGET_IMAGES_GZIP=.*|# CONFIG_TARGET_IMAGES_GZIP is not set|g" .config
        
        echo "打印action目录结构"
        tree -L 1

    - name: 🛠️ 配置OpenAppFilter编译选项
      working-directory: ./imagebuilder
      run: |
        # 按照官方方法开启OAF编译选项
        echo "CONFIG_PACKAGE_luci-app-oaf=y" >> .config
        make defconfig  # 让配置生效，自动开启依赖的组件

    - name: 🛠️ 修改build24.sh启用OAF
      run: |
        # 解除build24.sh中OAF相关包的注释
        sed -i 's/#PACKAGES="$PACKAGES luci-i18n-oaf-zh-cn"/PACKAGES="$PACKAGES luci-i18n-oaf-zh-cn"/g' imagebuilder/build24.sh
        sed -i 's/#PACKAGES="$PACKAGES luci-app-oaf"/PACKAGES="$PACKAGES luci-app-oaf"/g' imagebuilder/build24.sh
        sed -i 's/#PACKAGES="$PACKAGES appfilter"/PACKAGES="$PACKAGES appfilter"/g' imagebuilder/build24.sh
        # 添加缺失的appfilter相关包
        echo 'PACKAGES="$PACKAGES oaf"' >> imagebuilder/build24.sh
        echo 'PACKAGES="$PACKAGES luci-app-appfilter"' >> imagebuilder/build24.sh
        echo 'PACKAGES="$PACKAGES luci-i18n-appfilter-zh-cn"' >> imagebuilder/build24.sh

    - name: 🧱 单独编译OpenAppFilter组件
      working-directory: ./imagebuilder
      run: |
        # 按照官方推荐方式单独编译OAF组件
        make package/OpenAppFilter/luci-app-oaf/compile V=s
        make package/OpenAppFilter/open-app-filter/compile V=s
        make package/OpenAppFilter/oaf/compile V=s

    - name: 🧱 构建iStoreOS-rootfs
      working-directory: ./imagebuilder
      run: |
        echo "打印imagebuilder目录结构"
        tree -L 1
        echo "打印repositories"
        cat repositories.conf
        echo "打印Makefile"
        cat Makefile |grep here
        bash ./build24.sh

    - name: 📌 收集所有OAF相关IPK并分类
      id: collect_ipks
      run: |
        # 创建分类目录
        mkdir -p openappfilter_ipk/{oaf,open-app-filter,luci-app-oaf,other}
        
        # 收集并分类三个核心组件
        find imagebuilder/ -type f -name "oaf_*.ipk" -exec cp {} openappfilter_ipk/oaf/ \; -print
        find imagebuilder/ -type f -name "open-app-filter_*.ipk" -exec cp {} openappfilter_ipk/open-app-filter/ \; -print
        find imagebuilder/ -type f -name "luci-app-oaf_*.ipk" -exec cp {} openappfilter_ipk/luci-app-oaf/ \; -print
        
        # 收集其他相关组件
        find imagebuilder/ -type f -name "appfilter*.ipk" -exec cp {} openappfilter_ipk/other/ \; -print
        find imagebuilder/ -type f -name "luci-i18n-oaf*.ipk" -exec cp {} openappfilter_ipk/other/ \; -print
        find imagebuilder/ -type f -name "luci-app-appfilter*.ipk" -exec cp {} openappfilter_ipk/other/ \; -print
        find imagebuilder/ -type f -name "luci-i18n-appfilter*.ipk" -exec cp {} openappfilter_ipk/other/ \; -print
        
        # 检查收集结果
        echo "收集到的IPK文件结构："
        tree openappfilter_ipk/

    - name: 📦 打印产出rootfs
      run: |
        echo "打印bin目录"
        ls -lah imagebuilder/bin/targets/armsr/armv8/

    - name: 🚀 上传到 Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: iStoreOS-24.10-RELEASE-${{ inputs.network_settings }}
        body: |
          📌 版本： iStoreOS-24.10.2-RELEASE（包含OpenAppFilter插件）
          
          📂 来源： https://fw.koolcenter.com/iStoreOS/ib/armsr/
          
          🧠 内核： Please Login to iStoreOS → System → Amlogic Service → Replace the Kernel
          
          🧩 集成： 
          - 基础系统组件、驱动、网络工具、容器支持、LuCI界面及插件
          - OpenAppFilter全套组件：
            * oaf（内核模块）
            * open-app-filter（服务组件）
            * luci-app-oaf（Web界面）
          
          👤 用户名： root
          
          🔒 密码： 无
          
          🌐 IP： ${{ inputs.network_settings == 'static' && inputs.ipaddr || '单网口-动态获取（从上级路由找寻）；多网口-IP：192.168.100.1' }}
        files: |
          imagebuilder/bin/targets/armsr/armv8/*generic-rootfs.tar.gz
          openappfilter_ipk/oaf/*.ipk
          openappfilter_ipk/open-app-filter/*.ipk
          openappfilter_ipk/luci-app-oaf/*.ipk
          openappfilter_ipk/other/*.ipk
      env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
